import { Transaction, TransactionRequest, ethers } from "ethers";
import fs from "fs-extra";
import "dotenv/config";
const main = async () => {
    const { Wallet, JsonRpcProvider, ContractFactory } = ethers;
    // const provider = new JsonRpcProvider(process.env.GANACHE_URL);
    const provider = new JsonRpcProvider(
        process.env.ALCHEMY_SEPOLIA_TESTNET_URL!
    );

    // const wallet = new Wallet(process.env.ACCOUNT_PRIVATE_KEY!, provider);
    const wallet = new Wallet(process.env.METAMASK_PRIVATE_KEY!, provider);

    const contractAbi = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.abi",
        "utf8"
    );
    const contractBinary = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.bin",
        "utf8"
    );

    const contractFactory = new ContractFactory(
        contractAbi,
        contractBinary,
        wallet
    );

    const contract = await contractFactory.deploy();
    const contractAddress = await contract.getAddress();
    console.log(`Contrac tAdress ${contractAddress}`);
    //   const nonce = await wallet.getNonce();

    //   const tx: TransactionRequest = {
    //     nonce,
    //     gasPrice: 20000000000,
    //     gasLimit: 1000000,
    //     to: null,
    //     value: 0,
    //     data: "0x608060405234801561001057600080fd5b5061099e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e64cec1146100675780636057361d146100855780636f760f41146100a15780638bab8dd5146100bd5780639e7a13ad146100ed578063e907247c1461011e575b600080fd5b61006f61014e565b60405161007c9190610315565b60405180910390f35b61009f600480360381019061009a9190610370565b610157565b005b6100bb60048036038101906100b691906104e3565b610161565b005b6100d760048036038101906100d2919061053f565b6101ea565b6040516100e49190610315565b60405180910390f35b61010760048036038101906101029190610370565b610218565b604051610115929190610607565b60405180910390f35b6101386004803603810190610133919061053f565b6102d4565b6040516101459190610315565b60405180910390f35b60008054905090565b8060008190555050565b600160405180604001604052808381526020018481525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190816101c09190610843565b505050806002836040516101d49190610951565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6001818154811061022857600080fd5b906000526020600020906002020160009150905080600001549080600101805461025190610666565b80601f016020809104026020016040519081016040528092919081815260200182805461027d90610666565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b5050505050905082565b60006002826040516102e69190610951565b9081526020016040518091039020549050919050565b6000819050919050565b61030f816102fc565b82525050565b600060208201905061032a6000830184610306565b92915050565b6000604051905090565b600080fd5b600080fd5b61034d816102fc565b811461035857600080fd5b50565b60008135905061036a81610344565b92915050565b6000602082840312156103865761038561033a565b5b60006103948482850161035b565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103f0826103a7565b810181811067ffffffffffffffff8211171561040f5761040e6103b8565b5b80604052505050565b6000610422610330565b905061042e82826103e7565b919050565b600067ffffffffffffffff82111561044e5761044d6103b8565b5b610457826103a7565b9050602081019050919050565b82818337600083830152505050565b600061048661048184610433565b610418565b9050828152602081018484840111156104a2576104a16103a2565b5b6104ad848285610464565b509392505050565b600082601f8301126104ca576104c961039d565b5b81356104da848260208601610473565b91505092915050565b600080604083850312156104fa576104f961033a565b5b600083013567ffffffffffffffff8111156105185761051761033f565b5b610524858286016104b5565b92505060206105358582860161035b565b9150509250929050565b6000602082840312156105555761055461033a565b5b600082013567ffffffffffffffff8111156105735761057261033f565b5b61057f848285016104b5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105c25780820151818401526020810190506105a7565b60008484015250505050565b60006105d982610588565b6105e38185610593565b93506105f38185602086016105a4565b6105fc816103a7565b840191505092915050565b600060408201905061061c6000830185610306565b818103602083015261062e81846105ce565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061067e57607f821691505b60208210810361069157610690610637565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106bc565b61070386836106bc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061074061073b610736846102fc565b61071b565b6102fc565b9050919050565b6000819050919050565b61075a83610725565b61076e61076682610747565b8484546106c9565b825550505050565b600090565b610783610776565b61078e818484610751565b505050565b5b818110156107b2576107a760008261077b565b600181019050610794565b5050565b601f8211156107f7576107c881610697565b6107d1846106ac565b810160208510156107e0578190505b6107f46107ec856106ac565b830182610793565b50505b505050565b600082821c905092915050565b600061081a600019846008026107fc565b1980831691505092915050565b60006108338383610809565b9150826002028217905092915050565b61084c82610588565b67ffffffffffffffff811115610865576108646103b8565b5b61086f8254610666565b61087a8282856107b6565b600060209050601f8311600181146108ad576000841561089b578287015190505b6108a58582610827565b86555061090d565b601f1984166108bb86610697565b60005b828110156108e3578489015182556001820191506020850194506020810190506108be565b8683101561090057848901516108fc601f891682610809565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b600061092b82610588565b6109358185610915565b93506109458185602086016105a4565b80840191505092915050565b600061095d8284610920565b91508190509291505056fea26469706673582212208c6806990a55ab6cd224970af382a16589bbcfef6888529a4de837818805257b64736f6c63430008130033",
    //   };

    //   // const signedTransaction = await wallet.signTransaction(tx);
    //   const sentTransactionResponse = await wallet.sendTransaction(tx);
    //   await sentTransactionResponse.wait(1); //waiting for the number of blocks to confirm the transaction
    //   console.log({ sentTransactionResponse });
    // };
    // //@ts-ignore
    // const currentFavoriteNumber = await contract.retrieve();
    // //@ts-ignore
    // const transactionResponse = await contract.store("7");
    // const transactionReceipt = transactionResponse.wait(1);
    // //@ts-ignore
    // const updatedFavoriteNumber = await contract.retrieve();
};
main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.log({ error });
        process.exit(1);
    });
